{"version":3,"file":"static/js/151.341fa726.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/InputForm/InputForm.jsx","pages/Movies.jsx","services/API.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const UlMovies = styled.ul`\n  list-style-type: decimal;\n  gap: 10px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const LiMovies = styled.li`\n  display: list-item;\n  margin-top: 5px;\n`;\n\nexport const NavLinkStyle = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n  :hover,\n  :focus {\n    transform: scale(0.99);\n    cursor: pointer;\n    color: orangered;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { UlMovies, LiMovies, NavLinkStyle } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <UlMovies>\n      {movies.map(({ id, title }) => {\n        return (\n          <LiMovies key={id}>\n            <NavLinkStyle to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </NavLinkStyle>\n          </LiMovies>\n        );\n      })}\n    </UlMovies>\n  );\n};\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { Formik, Field, Form } from 'formik';\nimport PropTypes from 'prop-types';\nconst InputForm = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={{\n        query: '',\n      }}\n      onSubmit={({ query }, { resetForm }) => {\n        onSubmit(query);\n        resetForm();\n      }}\n    >\n      <Form>\n        <Field type=\"text\" name=\"query\" />\n        <button type=\"submit\">Search</button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default InputForm;\nInputForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { getBySearch } from 'services/API';\nimport { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport InputForm from 'components/InputForm/InputForm';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const queryInput = searchParams.get('query');\n\n  useEffect(() => {\n    if (queryInput) {\n      setQuery(queryInput);\n      return;\n    }\n    setQuery('');\n  }, [queryInput]);\n\n  useEffect(() => {\n    if (query === '') {\n      setMovies([]);\n      return;\n    }\n    getBySearch(query)\n      .then(data => {\n        setMovies(data);\n      })\n      .catch(error => console.log(error));\n  }, [query]);\n\n  const handleSubmit = searchQuery => {\n    setSearchParams({ query: searchQuery });\n    setQuery(searchQuery);\n  };\n\n  return (\n    <main>\n      <h2>Movies search page</h2>\n      <InputForm onSubmit={handleSubmit} />\n      {movies.length === 0 && queryInput ? (\n        <p>Sorry, there is no any movie</p>\n      ) : (\n        <MoviesList movies={movies} />\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '520faa847257d57af54017c37ef43fe0';\n//api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\nexport async function getTrending() {\n  try {\n    const resTrending = await axios.get(\n      `${baseURL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return await resTrending.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getBySearch(query) {\n  try {\n    const resSearch = await axios.get(\n      `${baseURL}/search/movie?api_key=${API_KEY}&page=1&include_adult=false&query=${query}`\n    );\n    return await resSearch.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  try {\n    const resMovieDetails = await axios.get(\n      `${baseURL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return await resMovieDetails.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(movieId) {\n  try {\n    const resMovieCast = await axios.get(\n      `${baseURL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return await resMovieCast.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const resMovieReviews = await axios.get(\n      `${baseURL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return await resMovieReviews.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["UlMovies","styled","LiMovies","NavLinkStyle","NavLink","movies","location","useLocation","map","id","title","to","state","from","onSubmit","initialValues","query","resetForm","type","name","useSearchParams","searchParams","setSearchParams","useState","setQuery","setMovies","queryInput","get","useEffect","getBySearch","then","data","catch","error","console","log","searchQuery","length","MoviesList","baseURL","API_KEY","getTrending","axios","resTrending","results","resSearch","getMovieDetails","movieId","resMovieDetails","getMovieCast","resMovieCast","getMovieReviews","resMovieReviews"],"sourceRoot":""}