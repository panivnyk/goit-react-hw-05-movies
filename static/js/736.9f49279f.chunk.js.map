{"version":3,"file":"static/js/736.9f49279f.chunk.js","mappings":"8QAEaA,EAASC,EAAAA,EAAAA,GAAH,4EAKNC,EAASD,EAAAA,EAAAA,GAAH,2FAKNE,EAAUF,EAAAA,EAAAA,IAAH,+C,SC2CpB,EAhDa,WACX,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAeA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA2BL,GAA3B,iGAEuBM,EAAAA,EAAAA,IAAaN,GAFpC,OAEUO,EAFV,OAGIH,EAAYG,EAAKC,MAHrB,gDAKIC,QAAQC,IAAI,KAAMC,SALtB,yDADc,yBAAC,SAAD,2BASdC,CAAYZ,EACb,GAAE,CAACA,IAEoB,IAApBG,EAASU,QACJ,mEAIP,SAACjB,EAAD,UACGO,EAASW,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC5C,OACE,UAACpB,EAAD,WACGkB,GACC,SAACjB,EAAD,CAASoB,IAAG,UAxBL,mCAwBK,OAAkBH,GAAgBI,IAAKH,KAEnD,SAAClB,EAAD,CACEoB,IAAG,oDACHC,IAAKH,KAGT,4BACE,uBAAIA,KACJ,yCAEE,uBAAIC,YAbGH,EAkBhB,KAGN,C,8LCnDKM,EAAU,+BACVC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEuBC,EAAAA,GAAAA,IAAA,UACrBH,EADqB,uCACiBC,IAHxC,cAEGG,EAFH,gBAKUA,EAAYlB,KAAKmB,QAL3B,wEAOHjB,QAAQC,IAAR,MAPG,gFAWA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,gGAEqBJ,EAAAA,GAAAA,IAAA,UACnBH,EADmB,iCACaC,EADb,6CACyDM,IAH9E,cAEGC,EAFH,gBAKUA,EAAUtB,KAAKmB,QALzB,wEAOHjB,QAAQC,IAAR,MAPG,gFAWA,SAAeoB,EAAtB,+CAAO,OAAP,oBAAO,WAA+B9B,GAA/B,gGAE2BwB,EAAAA,GAAAA,IAAA,UACzBH,EADyB,kBACRrB,EADQ,oBACWsB,IAHtC,cAEGS,EAFH,gBAKUA,EAAgBxB,KAL1B,wEAOHE,QAAQC,IAAR,MAPG,gFAWA,SAAeJ,EAAtB,+CAAO,OAAP,oBAAO,WAA4BN,GAA5B,gGAEwBwB,EAAAA,GAAAA,IAAA,UACtBH,EADsB,kBACLrB,EADK,4BACsBsB,IAH9C,cAEGU,EAFH,gBAKUA,EAAazB,KALvB,wEAOHE,QAAQC,IAAR,MAPG,gFAWA,SAAeuB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BjC,GAA/B,gGAE2BwB,EAAAA,GAAAA,IAAA,UACzBH,EADyB,kBACRrB,EADQ,4BACmBsB,IAH9C,cAEGY,EAFH,gBAKUA,EAAgB3B,KAAKmB,QAL/B,wEAOHjB,QAAQC,IAAR,MAPG,gF","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/API.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const UlCast = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\nexport const LiCast = styled.li`\n  list-style-type: none;\n  font-size: 14px;\n  font-weight: 500;\n`;\nexport const ImgCast = styled.img`\n  border-radius: 5px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { getMovieCast } from 'services/API';\nimport { UlCast, LiCast, ImgCast } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castInfo, setCastInfo] = useState([]);\n  const srcImgBase = 'https://image.tmdb.org/t/p/w200';\n\n  useEffect(() => {\n    async function getCastInfo(movieId) {\n      try {\n        const data = await getMovieCast(movieId);\n        setCastInfo(data.cast);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    getCastInfo(movieId);\n  }, [movieId]);\n\n  if (castInfo.length === 0) {\n    return <p>We don't have any cast for this movie.</p>;\n  }\n\n  return (\n    <UlCast>\n      {castInfo.map(({ cast_id, profile_path, name, character }) => {\n        return (\n          <LiCast key={cast_id}>\n            {profile_path ? (\n              <ImgCast src={`${srcImgBase}${profile_path}`} alt={name} />\n            ) : (\n              <ImgCast\n                src={`https://via.placeholder.com/200x300?text=No+image`}\n                alt={name}\n              />\n            )}\n            <div>\n              <p>{name}</p>\n              <div>\n                Character:\n                <p>{character}</p>\n              </div>\n            </div>\n          </LiCast>\n        );\n      })}\n    </UlCast>\n  );\n};\n\nexport default Cast;\n\nCast.propTypes = {\n  castInfo: PropTypes.arrayOf(\n    PropTypes.shape({\n      cast_id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '520faa847257d57af54017c37ef43fe0';\n//api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\nexport async function getTrending() {\n  try {\n    const resTrending = await axios.get(\n      `${baseURL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return await resTrending.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getBySearch(query) {\n  try {\n    const resSearch = await axios.get(\n      `${baseURL}/search/movie?api_key=${API_KEY}&page=1&include_adult=false&query=${query}`\n    );\n    return await resSearch.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  try {\n    const resMovieDetails = await axios.get(\n      `${baseURL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return await resMovieDetails.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(movieId) {\n  try {\n    const resMovieCast = await axios.get(\n      `${baseURL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return await resMovieCast.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const resMovieReviews = await axios.get(\n      `${baseURL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return await resMovieReviews.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["UlCast","styled","LiCast","ImgCast","movieId","useParams","useState","castInfo","setCastInfo","useEffect","getMovieCast","data","cast","console","log","message","getCastInfo","length","map","cast_id","profile_path","name","character","src","alt","baseURL","API_KEY","getTrending","axios","resTrending","results","getBySearch","query","resSearch","getMovieDetails","resMovieDetails","resMovieCast","getMovieReviews","resMovieReviews"],"sourceRoot":""}