{"version":3,"file":"static/js/387.7d5dd6d7.chunk.js","mappings":"iQAEaA,E,OAAYC,EAAAA,GAAH,mE,SCsCtB,EAjCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA8BL,GAA9B,iGAEuBM,EAAAA,EAAAA,IAAgBN,GAFvC,OAEUO,EAFV,OAGIH,EAAeG,GAHnB,gDAKIC,QAAQC,IAAI,KAAMC,SALtB,yDADc,yBAAC,SAAD,2BASdC,CAAeX,EAChB,GAAE,CAACA,IAEuB,IAAvBG,EAAYS,QACP,sEAGP,wBACGT,EAAYU,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC9B,OACE,UAAClB,EAAD,YACE,oCAAYiB,MACZ,uBAAIC,MAFUF,EAKnB,KAGN,C,8LCpCKG,EAAU,+BACVC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEuBC,EAAAA,GAAAA,IAAA,UACrBH,EADqB,uCACiBC,IAHxC,cAEGG,EAFH,gBAKUA,EAAYd,KAAKe,QAL3B,wEAOHd,QAAQC,IAAR,MAPG,gFAWA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,gGAEqBJ,EAAAA,GAAAA,IAAA,UACnBH,EADmB,iCACaC,EADb,6CACyDM,IAH9E,cAEGC,EAFH,gBAKUA,EAAUlB,KAAKe,QALzB,wEAOHd,QAAQC,IAAR,MAPG,gFAWA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAA+B1B,GAA/B,gGAE2BoB,EAAAA,GAAAA,IAAA,UACzBH,EADyB,kBACRjB,EADQ,oBACWkB,IAHtC,cAEGS,EAFH,gBAKUA,EAAgBpB,KAL1B,wEAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAemB,EAAtB,+CAAO,OAAP,oBAAO,WAA4B5B,GAA5B,gGAEwBoB,EAAAA,GAAAA,IAAA,UACtBH,EADsB,kBACLjB,EADK,4BACsBkB,IAH9C,cAEGW,EAFH,gBAKUA,EAAatB,KALvB,wEAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeH,EAAtB,+CAAO,OAAP,oBAAO,WAA+BN,GAA/B,gGAE2BoB,EAAAA,GAAAA,IAAA,UACzBH,EADyB,kBACRjB,EADQ,4BACmBkB,IAH9C,cAEGY,EAFH,gBAKUA,EAAgBvB,KAAKe,QAL/B,wEAOHd,QAAQC,IAAR,MAPG,gF","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/API.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LiReviews = styled.li`\n  list-style-type: decimal;\n  gap: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { getMovieReviews } from 'services/API';\nimport { LiReviews } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewsInfo, setReviewsInfo] = useState([]);\n\n  useEffect(() => {\n    async function getReviewsInfo(movieId) {\n      try {\n        const data = await getMovieReviews(movieId);\n        setReviewsInfo(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    getReviewsInfo(movieId);\n  }, [movieId]);\n\n  if (reviewsInfo.length === 0) {\n    return <p>We don't have any reviews for this movie.</p>;\n  }\n  return (\n    <ul>\n      {reviewsInfo.map(({ id, author, content }) => {\n        return (\n          <LiReviews key={id}>\n            <b>Author: {author}</b>\n            <p>{content}</p>\n          </LiReviews>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n\nReviews.propTypes = {\n  reviewsInfo: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '520faa847257d57af54017c37ef43fe0';\n//api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\nexport async function getTrending() {\n  try {\n    const resTrending = await axios.get(\n      `${baseURL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return await resTrending.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getBySearch(query) {\n  try {\n    const resSearch = await axios.get(\n      `${baseURL}/search/movie?api_key=${API_KEY}&page=1&include_adult=false&query=${query}`\n    );\n    return await resSearch.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  try {\n    const resMovieDetails = await axios.get(\n      `${baseURL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return await resMovieDetails.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCast(movieId) {\n  try {\n    const resMovieCast = await axios.get(\n      `${baseURL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return await resMovieCast.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const resMovieReviews = await axios.get(\n      `${baseURL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return await resMovieReviews.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["LiReviews","styled","movieId","useParams","useState","reviewsInfo","setReviewsInfo","useEffect","getMovieReviews","data","console","log","message","getReviewsInfo","length","map","id","author","content","baseURL","API_KEY","getTrending","axios","resTrending","results","getBySearch","query","resSearch","getMovieDetails","resMovieDetails","getMovieCast","resMovieCast","resMovieReviews"],"sourceRoot":""}